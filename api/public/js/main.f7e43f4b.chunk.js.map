{"version":3,"sources":["Layout.js","pages/Login.js","components/TaskItem.js","service/taskService.js","actions/taskAction.js","actions/projectAction.js","reducers/index.js","reducers/tasks.js","reducers/projects.js","reducers/project.js","reducers/taskUpToDate.js","actions/task.js","components/TaskColumn.js","constant/task_state.js","service/projectService.js","pages/Tasks.js","actions/project.js","pages/Projects.js","helper/user.js","createStore.js","App.js","index.js"],"names":["Layout","_ref","children","react_default","a","createElement","className","Login","_useState","useState","_useState2","Object","slicedToArray","isLogin","setLogin","Form","Field","placeholder","type","Button","onClick","ITEM_TYPES","DragSource","beginDrag","props","id","state","title","description","connect","monitor","connectDragSource","dragSource","isDragging","onEdit","onRemove","isExpand","setIsExpand","style","opacity","Icon","name","data-task","event","target","dataset","task","size","link","delay","ms","Promise","resolve","setTimeout","getFromStorage","data","localStorage","getItem","JSON","parse","saveToStorage","setItem","stringify","taskAction","projectAction","combineReducers","tasks","arguments","length","undefined","action","TASK_ACTIONS","concat","toConsumableArray","filter","removeTask","map","objectSpread","updateTask","response","PROJECT_ACTIONS","projects","project","removeProject","updateProject","taskUpToDate","getTasksReducer","taskState","getTasksByState","getTaskUpToDateReducer","getProjectsReducer","getProjectDetailReducer","getATaskReducer","taskId","find","getATask","updateTaskAction","dispatch","getState","taskBeforeUpdate","then","allTasks","newTasks","catch","error","console","log","components_TaskColumn","DropTarget","drop","connectDropTarget","dropTarget","isOver","header","doEdit","doRemove","components_TaskItem","key","task_state","BACK_LOG","display","SELECTED_DEVELOP","INPROGRESS","COMPLETED","mapDispatchToProps","fetchTasksAction","projectId","getTasks","getProjectDetailAction","allProjects","getProjectDetail","addTaskAction","v4","created","Date","now","push","addTask","removeTaskAction","taskBeforeRemove","indexItem","i","slice","ownProps","backLogTasks","TaskState","selectedTasks","inprogressTasks","completedTasks","match","params","projectDetail","taskTitle","setTaskTitle","_useState3","_useState4","taskDescription","setTaskDescription","_useState5","_useState6","selectedTask","setSelectedTask","_useState7","_useState8","isCreatingTask","setIsCreatingTask","_useState9","_useState10","isEdittingTask","setIsEdittingTask","_useState11","_useState12","isShowRemoveConfirm","setIsShowRemoveConfirm","useEffect","onTitleChange","_ref2","value","onDescriptionChange","_ref3","openModalEditTask","showConfirmBeforeRemove","Link","to","compact","Confirm","open","content","onCancel","onConfirm","Modal","Header","Content","Input","onChange","TextArea","Actions","trim","color","path","addProject","newProjects","fetchProjects","resetSelectedProject","isCreatingProject","setIsCreatingProject","isEditingProject","setIsEditingProject","projectName","setProjectName","projectDescription","setProjectDescription","setShowConfirm","selectedProject","setSelectedProject","toggleModalCreatProject","toggleModalEditProject","onProjectNameChange","e","onProjectDescriptionChange","_ref4","editProject","List","divided","relaxed","Item","NavLink","as","Description","data-project","user","get","createStore","middlewares","thunk","reducer","applyMiddleware","apply","App","userHelper","es","store","src_Layout","pages_Login","lib","backend","HTML5Backend","BrowserRouter","Switch","Route","exact","component","Projects","Tasks","Redirect","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f7e43f4b.chunk.js","sourcesContent":["import React from 'react';\nimport './css/app.scss';\n\nfunction Layout({children}) {\n    return ( \n      <div className=\"app-wrapper container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"app-header\">\n              <h1>Task Management</h1>\n            </div>\n          </div>\n          <div className=\"app-body col-12\">\n            {children}\n          </div>\n          <div className=\"app-footer col-12\">\n            &copy;2019\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Layout;","import React, { useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport './Login.scss';\n\nfunction Login() {\n    const [isLogin, setLogin] = useState(true);\n\n    const register = function() {\n        setLogin(false);\n    }\n\n    const login = function() {\n        setLogin(true);\n    }\n\n    return (\n        <div className='login-wrapper'>\n            <Form>\n                <h1>Login</h1>\n                <Form.Field>\n                    <input placeholder='Email' />\n                </Form.Field>\n                <Form.Field>\n                    <input type='password' placeholder=\"Password\" />\n                </Form.Field>\n                {isLogin && <Button>Login</Button>}\n                {!isLogin && <Button>Register</Button>}\n                {isLogin && <div className=\"login-link-container\"><span className=\"clickable underline\" onClick={register}>Register</span></div>}\n                {!isLogin && <div  className=\"login-link-container\"><span className=\"clickable underline\" onClick={login}>Login</span></div>}\n            </Form>\n        </div>\n    );\n}\n\nexport default Login;\n","import React, {useState} from 'react';\nimport './TaskItem.scss';\nimport { DragSource } from 'react-dnd';\nimport {Icon} from 'semantic-ui-react';\n\nexport const ITEM_TYPES = {\n    TASK: 'TASK'\n};\n\nconst taskSource = {\n    beginDrag(props) {\n        return {\n            id: props.id,\n            state: props.state,\n            title: props.title,\n            description: props.description\n        }\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nfunction TaskItem({isDragging, connectDragSource, id, title, description, onEdit, onRemove}) {\n    const [isExpand, setIsExpand] = useState(false);\n\n    const toggleDescription = function() {\n        setIsExpand(!isExpand);\n    }\n\n    const editTask = function(event) {\n        onEdit(event.target.dataset.task);\n    }\n\n    const removeTask = function(event) {\n        onRemove(event.target.dataset.task);\n    }\n\n    return connectDragSource(\n        <div className=\"task-item\" style={{opacity: isDragging ? 0.5 : 1}}>\n            <div onClick={toggleDescription} className=\"task-item__title\">{title} <Icon name={isExpand ? \"angle up\" : \"angle down\"}/></div>\n            {isExpand && <div className=\"task-item__description\">{description}</div>}\n            {isExpand && <div className=\"task-item__actions-container\">\n                <Icon data-task={id} onClick={removeTask} size=\"small\" link name='close'/>\n                <Icon data-task={id} onClick={editTask} size=\"small\" link name='edit'/>\n            </div>}\n        </div>\n    );\n}\n\nexport default DragSource(ITEM_TYPES.TASK, taskSource, collect)(TaskItem);\n","import { v4 } from 'uuid';\n\nexport const delay = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nconst localStorageKey = \"tasks\";\n\nconst getFromStorage = function() {\n    const data = localStorage.getItem(localStorageKey);\n    if(data) {\n        return JSON.parse(data);\n    }\n\n    return null;\n}\nconst saveToStorage = function(data) {\n    return localStorage.setItem(localStorageKey, JSON.stringify(data));\n}\n\nexport const getTasks = (projectId) => {\n    return delay(500).then(() => {\n        const allTasks = getFromStorage();\n        if(allTasks) {\n            return allTasks.filter(task => task.projectId === projectId);\n        }\n\n        return [];\n    });\n}\n\nexport const addTask = (projectId, title, description, state) => {\n    return delay(500).then(() => {\n        const task = {\n            id: v4(),\n            projectId,\n            title,\n            description,\n            state,\n            created: Date.now()\n        }\n    \n        let allTasks = getFromStorage();\n        if(!allTasks) {\n            allTasks = [];\n        }\n        allTasks.push(task);\n        saveToStorage(allTasks);\n\n        return task;\n    });\n}\n\nexport const removeTask = (taskId) => {\n    return delay(500).then(()=> {\n        const allTasks = getFromStorage();\n        if(allTasks) {\n            let indexItem = -1;\n            for(let i=0; i<allTasks.length; i++) {\n                if(allTasks[i].id === taskId) {\n                    indexItem = i;\n                    break;\n                }\n            }\n\n            if(indexItem >= 0){\n                const newTasks = [...allTasks.slice(0,indexItem), ...allTasks.slice(indexItem+1)];\n                saveToStorage(newTasks);\n            }\n        }\n    });\n}\n\n\nexport const updateTask = (taskId, title, description, state) => {\n    return delay(500).then(()=> {\n        const allTasks = getFromStorage();\n        if(allTasks) {\n            const newTasks = allTasks.map(task => {\n                if(task.id === taskId) {\n                    return {\n                        ...task,\n                        title,\n                        description,\n                        state\n                    }\n                } else {\n                    return task;\n                }\n            });\n\n            saveToStorage(newTasks);\n        }\n    });\n};","export default {\n    ADD_TASK: 'ADD_TASK',\n    REMOVE_TASK: 'REMOVE_TASK',\n    FETCH_TASKS_SUCCESS: 'FETCH_TASKS_SUCCESS',\n    UPDATE_TASK: 'UPDATE_TASK'\n};","\nexport default {\n    ADD_PROJECT: 'ADD_PROJECT',\n    REMOVE_PROJECT: 'REMOVE_PROJECT',\n    FETCH_PROJECTS_SUCCESS: 'FETCH_PROJECTS_SUCCESS',\n    UPDATE_PROJECT: 'UPDATE_PROJECT',\n    DETAIL_PROJECT: 'DETAIL_PROJECT',\n    RESET_SELECTED_PROJECT: 'RESET_SELECTED_PROJECT'\n};","import {combineReducers} from 'redux';\nimport tasks, {getTasksByState, getATask} from './tasks';\nimport taskUpToDate from './taskUpToDate';\nimport projects from './projects';\nimport project from './project';\n\nexport default combineReducers({\n    tasks,\n    projects,\n    project,\n    taskUpToDate\n});\n\nexport const getTasksReducer = function(state, taskState) {\n    return getTasksByState(state.tasks, taskState);\n}\n\nexport const getTaskUpToDateReducer = function(state) {\n    return state.taskUpToDate;\n}\n\nexport const getProjectsReducer = function(state) {\n    return state.projects;\n}\n\nexport const getProjectDetailReducer = function(state) {\n    return state.project;\n}\n\nexport const getATaskReducer = function(state, taskId) {\n    return getATask(state.tasks, taskId);\n}","import TASK_ACTIONS from '../actions/taskAction';\nimport PROJECT_ACTIONS from '../actions/projectAction';\n\nconst updateTask = (state = [], action) => {\n    return state.map(task => {\n        if(task.id !== action.task.id) {\n            return task;\n        } else {\n            return {\n                ...task,\n                title: action.task.title,\n                description: action.task.description,\n                state: action.task.state\n            };\n        }\n    });\n}\n\nconst removeTask = (state = [], action) => {\n    return state.filter(task => task.id !== action.id);\n}\n\nexport default function(state = [], action) {\n    switch(action.type) {\n        case TASK_ACTIONS.ADD_TASK:\n            return [...state, action.task];\n        case TASK_ACTIONS.REMOVE_TASK:\n            return removeTask(state, action);\n        case TASK_ACTIONS.UPDATE_TASK:\n            return updateTask(state, action);\n        case TASK_ACTIONS.FETCH_TASKS_SUCCESS:\n            return action.response;\n        case PROJECT_ACTIONS.RESET_SELECTED_PROJECT:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport const getTasksByState = function(state, taskState) {\n    return state.filter(task => task.state === taskState);\n}\n\nexport const getATask = function(state, taskId) {\n    return state.find(task => task.id === taskId);\n}","import PROJECT_ACTIONS from '../actions/projectAction';\n\nconst removeProject = (state = [], action) => {\n    return state.filter(project => project.id !== action.id);\n}\n\nconst updateProject = (state = [], action) => {\n    return state.map(project => {\n        if(project.id !== action.project.id) {\n            return project;\n        } else {\n            return {\n                ...project,\n                name: action.project.name,\n                description: action.project.description\n            }\n        }\n    });\n}\n\nexport default function(state = [], action) {\n    switch(action.type) {\n        case PROJECT_ACTIONS.ADD_PROJECT:\n            return [...state, action.project];\n        case PROJECT_ACTIONS.FETCH_PROJECTS_SUCCESS:\n            return [...action.response];\n        case PROJECT_ACTIONS.REMOVE_PROJECT:\n            return removeProject(state, action);\n        case PROJECT_ACTIONS.UPDATE_PROJECT:\n            return updateProject(state, action);\n        default:\n            return state;\n    }\n}","import PROJECT_ACTIONS from '../actions/projectAction';\n\nexport default function(state = {}, action) {\n    switch(action.type) {\n        case PROJECT_ACTIONS.DETAIL_PROJECT:\n            return action.project;\n        case PROJECT_ACTIONS.RESET_SELECTED_PROJECT:\n            return {};\n        default:\n            return state;\n    }\n}","import PROJECT_ACTIONS from '../actions/projectAction';\nimport TASK_ACTIONS from '../actions/taskAction';\n\nexport default function(state = false, action) {\n    switch(action.type) {\n        case PROJECT_ACTIONS.RESET_SELECTED_PROJECT:\n            return false;\n        case TASK_ACTIONS.FETCH_TASKS_SUCCESS:\n            return true;\n        default:\n            return state;\n    }\n}","import {getTasks, addTask, removeTask, updateTask} from '../service/taskService';\nimport TASK_ACTIONS from './taskAction';\nimport {getATaskReducer} from '../reducers';\n\nconst fetchTasksSuccess = function(tasks) {\n    return {\n        type: TASK_ACTIONS.FETCH_TASKS_SUCCESS,\n        response: tasks\n    }\n}\n\nexport const fetchTasksAction = (projectId) => (dispatch, getState) => {\n    getTasks(projectId).then(response => {\n        dispatch(fetchTasksSuccess(response));\n    });\n};\n\nexport const addTaskAction = (projectId, title, description, state) => (dispatch, getState) => {\n    addTask(projectId, title, description, state).then(response => {\n        dispatch({\n            type: TASK_ACTIONS.ADD_TASK,\n            task: response\n        });\n    });\n}\n\nexport const updateTaskAction = (id, title, description, state) => (dispatch, getState) => {\n    const taskBeforeUpdate = getATaskReducer(getState(), id);\n\n    dispatch({\n        type: TASK_ACTIONS.UPDATE_TASK,\n        task: {\n            id, title, description, state\n        }\n    });\n\n    updateTask(id, title, description, state)\n    .catch((error) => {\n        console.log(error);\n        dispatch({\n            type: TASK_ACTIONS.UPDATE_TASK,\n            task: taskBeforeUpdate\n        });\n    })\n}\n\nexport const removeTaskAction = (id) => (dispatch, getState) => {\n    const taskBeforeRemove = getATaskReducer(getState(), id);\n\n    dispatch({\n        type: TASK_ACTIONS.REMOVE_TASK,\n        id: id\n    });\n\n    removeTask(id)\n    .catch(error => {\n        console.log(error);\n        dispatch({\n            type: TASK_ACTIONS.ADD_TASK,\n            task: taskBeforeRemove\n        });\n    })\n}","import React from 'react';\nimport TaskItem from './TaskItem';\nimport {ITEM_TYPES} from './TaskItem';\nimport {DropTarget} from 'react-dnd';\nimport {connect} from 'react-redux';\nimport {updateTaskAction} from '../actions/task';\n\nconst columnTarget = {\n    drop(props, monitor) {\n        const task = monitor.getItem();\n        if(props.type !== task.state) {\n            props.updateTaskAction(task.id, task.title, task.description, props.type);\n        }\n    }\n}\n\nconst collect = function(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver()\n    }\n}\n\nfunction TaskColumn({onEdit, onRemove, header, tasks, connectDropTarget, isOver}) {\n    const doEdit = function(taskId) {\n        const task = tasks.find(task => task.id === taskId);\n        onEdit(task);\n    }\n\n    const doRemove = function(taskId) {\n        const task = tasks.find(task => task.id === taskId);\n        onRemove(task);\n    }\n\n    return connectDropTarget(\n        <div className=\"task-column\">\n            <div className=\"task-column-header\">{tasks && tasks.length > 0 ? <b>{tasks.length} - </b> : null}{header}</div>\n            <div className={isOver ? \"drag-over task-column-items\" : \"task-column-items\"}>\n                {tasks && tasks.map(task => {\n                    return <TaskItem key={task.id}\n                        onEdit={doEdit}\n                        onRemove={doRemove}\n                        id={task.id}\n                        title={task.title} \n                        description={task.description}\n                        state={task.state}\n                    />\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default connect(null,{\n    updateTaskAction\n})(DropTarget(ITEM_TYPES.TASK, columnTarget, collect)(TaskColumn));\n","export default {\n    BACK_LOG: {\n        key: 'BACK_LOG',\n        display: 'Back Log'\n    },\n    SELECTED_DEVELOP: {\n        key: 'SELECTED_DEVELOP',\n        display: 'Selected for Develop'\n    },\n    INPROGRESS: {\n        key: 'INPROGRESS',\n        display: 'Inprogress'\n    },\n    COMPLETED: {\n        key: 'COMPLETED',\n        display: 'Completed'\n    }\n}","import { v4 } from 'uuid';\nimport {delay} from './taskService';\n\nconst localStorageKey = \"projects\";\n\nconst getFromStorage = function() {\n    const data = localStorage.getItem(localStorageKey);\n    if(data) {\n        return JSON.parse(data);\n    }\n\n    return null;\n}\n\nconst saveToStorage = function(data) {\n    return localStorage.setItem(localStorageKey, JSON.stringify(data));\n}\n\nexport const getProjects = () => {\n    return delay(500).then(()=> {\n        const projects = getFromStorage();\n        return projects || [];\n    });\n};\n\nexport const addProject = (name, description) => {\n    return delay(500).then(()=> {\n        const project = {\n            id: v4(),\n            name, description,\n            created: Date.now()\n        };\n    \n        let allProjects = getFromStorage();\n        if(!allProjects) {\n            allProjects = [];\n        }\n    \n        allProjects.push(project);\n        saveToStorage(allProjects);\n        return project;\n    });\n};\n\nexport const deleteProject = (projectId) => {\n    return delay(500).then(()=> {\n        const allProjects = getFromStorage();\n        if(allProjects) {\n            let indexItem = -1;\n            for(let i=0; i<allProjects.length; i++) {\n                if(allProjects[i].id === projectId) {\n                    indexItem = i;\n                    break;\n                }\n            }\n\n            if(indexItem >= 0){\n                const newProjects = [...allProjects.slice(0,indexItem), ...allProjects.slice(indexItem+1)];\n                saveToStorage(newProjects);\n            }\n        }\n    });\n};\n\nexport const updateProject = (projectId, name, description) => {\n    return delay(500).then(()=> {\n        const allProjects = getFromStorage();\n        if(allProjects) {\n            const newProjects = allProjects.map(project => {\n                if(project.id === projectId) {\n                    return {\n                        ...project,\n                        name, description\n                    }\n                } else {\n                    return project;\n                }\n            });\n\n            saveToStorage(newProjects);\n        }\n    });\n};\n\nexport const getProjectDetail = (projectId) => {\n    return delay(500).then(()=> {\n        const allProjects = getFromStorage();\n        if(allProjects) {\n            return allProjects.find(project => project.id === projectId);\n        } else {\n            return null;\n        }\n    });\n}","import React , {useEffect, useState}from 'react';\nimport {Link} from 'react-router-dom';\nimport './Tasks.scss';\nimport TaskColumn from '../components/TaskColumn';\nimport {connect} from 'react-redux';\nimport TaskState from '../constant/task_state';\nimport {fetchTasksAction, addTaskAction, updateTaskAction, removeTaskAction} from '../actions/task';\nimport {getProjectDetailAction} from '../actions/project';\nimport {getTasksReducer, getProjectDetailReducer, getTaskUpToDateReducer} from '../reducers';\nimport {Button, Modal, Form, Confirm} from 'semantic-ui-react';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    backLogTasks: getTasksReducer(state, TaskState.BACK_LOG.key),\n    selectedTasks: getTasksReducer(state, TaskState.SELECTED_DEVELOP.key),\n    inprogressTasks: getTasksReducer(state, TaskState.INPROGRESS.key),\n    completedTasks: getTasksReducer(state, TaskState.COMPLETED.key),\n    taskUpToDate: getTaskUpToDateReducer(state),\n    projectId: ownProps.match.params.projectId,\n    projectDetail: getProjectDetailReducer(state)\n  }\n};\n\nconst mapDispatchToProps = {\n  fetchTasksAction,\n  getProjectDetailAction,\n  addTaskAction,\n  updateTaskAction,\n  removeTaskAction\n};\n\nfunction Tasks({backLogTasks, selectedTasks, inprogressTasks, completedTasks, \n    taskUpToDate, projectId, projectDetail, \n    fetchTasksAction, getProjectDetailAction, \n    addTaskAction, updateTaskAction, removeTaskAction}) {\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isCreatingTask, setIsCreatingTask] = useState(false);\n  const [isEdittingTask, setIsEdittingTask] = useState(false);\n  const [isShowRemoveConfirm, setIsShowRemoveConfirm] = useState(false);\n\n  useEffect(() => {\n    if(!taskUpToDate) {\n      fetchTasksAction(projectId);\n    }\n    if(!projectDetail || !projectDetail.id) {\n      getProjectDetailAction(projectId);\n    }\n  });\n\n  const onTitleChange = function(event, {value}){\n    setTaskTitle(value);\n  }\n  const onDescriptionChange = function(event, {value}){\n    setTaskDescription(value);\n  }\n\n  const openModalCreateTask = function() {\n    setIsCreatingTask(true);\n  }\n  const doCreateTask = function() {\n    const title = taskTitle.trim();\n    const description = taskDescription.trim();\n\n    if(title) {\n      setTaskTitle('');\n      setTaskDescription('');\n      addTaskAction(projectId, title, description, TaskState.BACK_LOG.key);\n      setIsCreatingTask(false);\n    }\n  }\n  const cancelCreateTask = function() {\n    setIsCreatingTask(false);\n  }\n\n  const openModalEditTask = function(task){\n    setSelectedTask(task);\n    setTaskTitle(task.title);\n    setTaskDescription(task.description);\n    setIsEdittingTask(true);\n  }\n  const doUpdateTask = function(){\n    const title = taskTitle.trim();\n    const description = taskDescription.trim();\n\n    if(title) {\n      setTaskTitle('');\n      setTaskDescription('');\n      updateTaskAction(selectedTask.id, title, description, selectedTask.state);\n      setIsEdittingTask(false);\n    }\n  }\n  const cancelEditTask = function() {\n    setIsEdittingTask(false);\n  }\n\n  const showConfirmBeforeRemove = function(task) {\n    setSelectedTask(task);\n    setIsShowRemoveConfirm(true);\n  }\n  const cancelRemoveTask = function() {\n    setIsShowRemoveConfirm(false);\n  }\n  const doRemoveTask = function() {\n    removeTaskAction(selectedTask.id);\n    setIsShowRemoveConfirm(false);\n  }\n\n  return (\n      <div className=\"task-wrapper\">\n        <div className=\"task-header\">\n          <h3>\n            <Link to=\"/projects\">Projects</Link> / {projectDetail && projectDetail.name ? projectDetail.name : \"\"}\n          </h3>\n          <Button onClick={openModalCreateTask} size=\"small\" compact={true}>Create Task</Button>\n        </div>\n        <div className=\"task-container\">\n          <TaskColumn onEdit={openModalEditTask} onRemove={showConfirmBeforeRemove}\n            type={TaskState.BACK_LOG.key}\n            header={TaskState.BACK_LOG.display}\n            tasks={backLogTasks}\n          />\n          <TaskColumn onEdit={openModalEditTask} onRemove={showConfirmBeforeRemove}\n            type={TaskState.SELECTED_DEVELOP.key}\n            header={TaskState.SELECTED_DEVELOP.display}\n            tasks={selectedTasks}\n          />\n          <TaskColumn onEdit={openModalEditTask} onRemove={showConfirmBeforeRemove}\n            type={TaskState.INPROGRESS.key}\n            header={TaskState.INPROGRESS.display}\n            tasks={inprogressTasks}\n          />\n          <TaskColumn onEdit={openModalEditTask} onRemove={showConfirmBeforeRemove}\n            type={TaskState.COMPLETED.key}\n            header={TaskState.COMPLETED.display}\n            tasks={completedTasks}\n          />\n        </div>\n\n        <Confirm\n            open={isShowRemoveConfirm}\n            content='Do you really want to delete this task?'\n            onCancel={cancelRemoveTask}\n            onConfirm={doRemoveTask}\n        />\n\n        <Modal size=\"small\" open={isCreatingTask}>\n          <Modal.Header>Add a task</Modal.Header>\n          <Modal.Content>\n              <Form>\n                  <Form.Field>\n                      <Form.Input onChange={onTitleChange} placeholder=\"Name\" value={taskTitle}/>\n                  </Form.Field>\n                  <Form.Field>\n                      <Form.TextArea onChange={onDescriptionChange} placeholder=\"Description\" value={taskDescription}/>\n                  </Form.Field>\n              </Form>\n          </Modal.Content>\n          <Modal.Actions>\n              <Button onClick={doCreateTask} color='green'>Create</Button>\n              <Button onClick={cancelCreateTask} color='grey'>Cancel</Button>\n          </Modal.Actions>\n          </Modal>\n\n          <Modal size=\"small\" open={isEdittingTask}>\n          <Modal.Header>Edit a task</Modal.Header>\n          <Modal.Content>\n              <Form>\n                  <Form.Field>\n                      <Form.Input onChange={onTitleChange} placeholder=\"Name\" value={taskTitle}/>\n                  </Form.Field>\n                  <Form.Field>\n                      <Form.TextArea onChange={onDescriptionChange} placeholder=\"Description\" value={taskDescription}/>\n                  </Form.Field>\n              </Form>\n          </Modal.Content>\n          <Modal.Actions>\n              <Button onClick={doUpdateTask} color='green'>Update</Button>\n              <Button onClick={cancelEditTask} color='grey'>Cancel</Button>\n          </Modal.Actions>\n          </Modal>\n      </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);\n","import {getProjects, addProject, deleteProject, updateProject, getProjectDetail} from '../service/projectService';\nimport {getProjectDetailReducer} from '../reducers';\nimport PROJECT_ACTIONS from './projectAction';\n\nconst fetchProjectSuccess = function(projects) {\n    return {\n        type: PROJECT_ACTIONS.FETCH_PROJECTS_SUCCESS,\n        response: projects\n    }\n}\n\nexport const addProjectAction = (name, description) => (dispatch, getState) => {\n    addProject(name, description).then(response => {\n        dispatch({\n            type: PROJECT_ACTIONS.ADD_PROJECT,\n            project: response\n        });\n    });\n}\n\nexport const removeProjectAction = (id) => (dispatch, getState) => {\n    deleteProject(id).then(response => {\n        dispatch({\n            type: PROJECT_ACTIONS.REMOVE_PROJECT,\n            id: id\n        });\n    });\n}\n\nexport const updateProjectAction = (id, name, description) => (dispatch, getState) => {\n    updateProject(id, name, description).then(() => {\n        dispatch({\n            type: PROJECT_ACTIONS.UPDATE_PROJECT,\n            project: {\n                id, name, description\n            }\n        });\n    })\n};\n\nexport const fetchProjectAction = () => (dispatch, getState) => {\n    getProjects().then(response => {\n        dispatch(fetchProjectSuccess(response));\n    });\n};\n\nexport const getProjectDetailAction = (projectId) => (dispatch, getState) => {\n    const projects = getProjectDetailReducer(getState());\n    if(projects && projects.length > 0) {\n        dispatch({\n            type: PROJECT_ACTIONS.DETAIL_PROJECT,\n            project: projects.find(project => project.id === projectId)\n        });\n    } else {\n        getProjectDetail(projectId).then(response => {\n            dispatch({\n                type: PROJECT_ACTIONS.DETAIL_PROJECT,\n                project: response\n            });\n        })\n    }\n}\n\nexport const resetSelectedProjectAction = () => {\n    return {\n        type: PROJECT_ACTIONS.RESET_SELECTED_PROJECT\n    }\n}","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport './Projects.scss';\nimport { Button, Modal, Form, List, Icon, Confirm} from 'semantic-ui-react';\nimport {addProjectAction, removeProjectAction, \n    updateProjectAction, fetchProjectAction,\n    resetSelectedProjectAction} from '../actions/project';\nimport {getProjectsReducer} from '../reducers';\n\nconst mapStateToProps = function(state, {match}) {\n    return {\n        projects: getProjectsReducer(state),\n        path: match.path\n    }\n}\n\nfunction Projects({addProject, removeProject, updateProject, fetchProjects, resetSelectedProject, projects, path}) {\n    const [isCreatingProject, setIsCreatingProject] = useState(false);\n    const [isEditingProject, setIsEditingProject] = useState(false);\n    const [projectName, setProjectName] = useState('');\n    const [projectDescription, setProjectDescription] = useState('');\n    const [isShowRemoveConfirm, setShowConfirm] = useState(false);\n    const [selectedProject, setSelectedProject] = useState('');\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    useEffect(() => {\n        resetSelectedProject();\n    });\n\n    const toggleModalCreatProject = function(){\n        setIsCreatingProject(!isCreatingProject);\n    }\n\n    const toggleModalEditProject = function(){\n        setIsEditingProject(!isEditingProject);\n    }\n\n    const onProjectNameChange = function(e, {value}){\n        setProjectName(value);\n    }\n\n    const onProjectDescriptionChange = function(e, {value}) {\n        setProjectDescription(value);\n    }\n\n    const createProject = function(){\n        const name = projectName.trim();\n        const description = projectDescription.trim();\n        if(name && description) {\n            toggleModalCreatProject();\n            setProjectName('');\n            setProjectDescription('');\n            addProject(name, description);\n        }\n    }\n\n    const cancelCreateProject = function() {\n        toggleModalCreatProject();\n        setProjectName('');\n        setProjectDescription('');\n    }\n\n    const showConfirmBeforeRemove = function(event) {\n        setSelectedProject(event.target.dataset.project);\n        setShowConfirm(true);\n    }\n\n    const cancelRemoveProject = function() {\n        setShowConfirm(false);\n    }\n\n    const doRemoveProject = function(){\n        setShowConfirm(false);\n        removeProject(selectedProject);\n    }\n\n    const editProject = function(event) {\n        const id = event.target.dataset.project;\n        const project = projects.find(project => project.id === id);\n\n        setSelectedProject(id);\n        setProjectName(project.name);\n        setProjectDescription(project.description);\n        toggleModalEditProject();\n    }\n\n    const doUpdateProject = function() {\n        const name = projectName.trim();\n        const description = projectDescription.trim();\n        if(name && description) {\n            toggleModalEditProject();\n            setProjectName('');\n            setProjectDescription('');\n            updateProject(selectedProject, name, description);\n        }\n    }\n\n    const cancelEditProject = function() {\n        setProjectName('');\n        setProjectDescription('');\n        toggleModalEditProject();\n    }\n\n    return (\n        <div className=\"project-wrapper\">\n            <h3>Projects</h3>\n            <div className=\"project-list\">\n                { projects && \n                    <List divided relaxed>\n                        {\n                            projects.map(project => {\n                                return (\n                                    <List.Item key={project.id} className=\"project-item\">\n                                            <List.Content className=\"project-item__content\">\n                                                <NavLink to={path+\"/\"+project.id}>\n                                                    <List.Header as='h4'>{project.name}</List.Header>\n                                                    <List.Description as='div'>{project.description}</List.Description>\n                                                </NavLink>\n                                                <Icon data-project={project.id} onClick={showConfirmBeforeRemove} link name='close' className=\"project-item__delete\" />\n                                                <Icon data-project={project.id} onClick={editProject} link name='edit' className=\"project-item__edit\" />\n                                            </List.Content>\n                                    </List.Item>\n                                );\n                            })\n                        }\n                    </List>\n                }\n            </div>\n            <Button size=\"small\" compact={true} onClick={toggleModalCreatProject}>New Project</Button>\n\n            <Confirm\n                open={isShowRemoveConfirm}\n                content='Do you really want to delete this project?'\n                onCancel={cancelRemoveProject}\n                onConfirm={doRemoveProject}\n            />\n\n            <Modal size=\"small\" open={isCreatingProject}>\n                <Modal.Header>Add a new project</Modal.Header>\n                <Modal.Content>\n                    <Form>\n                        <Form.Field>\n                            <Form.Input onChange={onProjectNameChange} placeholder=\"Name\" value={projectName}/>\n                        </Form.Field>\n                        <Form.Field>\n                            <Form.TextArea onChange={onProjectDescriptionChange} placeholder=\"Description\" value={projectDescription}/>\n                        </Form.Field>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={createProject} color='green'>Create</Button>\n                    <Button onClick={cancelCreateProject} color='grey'>Cancel</Button>\n                </Modal.Actions>\n            </Modal>\n\n            <Modal size=\"small\" open={isEditingProject}>\n                <Modal.Header>Edit a project</Modal.Header>\n                <Modal.Content>\n                    <Form>\n                        <Form.Field>\n                            <Form.Input onChange={onProjectNameChange} placeholder=\"Name\" value={projectName}/>\n                        </Form.Field>\n                        <Form.Field>\n                            <Form.TextArea onChange={onProjectDescriptionChange} placeholder=\"Description\" value={projectDescription}/>\n                        </Form.Field>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={doUpdateProject} color='green'>Update</Button>\n                    <Button onClick={cancelEditProject} color='grey'>Cancel</Button>\n                </Modal.Actions>\n            </Modal>\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps, {\n    addProject: addProjectAction,\n    removeProject: removeProjectAction,\n    updateProject: updateProjectAction,\n    fetchProjects: fetchProjectAction,\n    resetSelectedProject: resetSelectedProjectAction\n})(Projects);\n","const user = {\n    isLogin() {\n        return true;\n    },\n\n    get() {\n        return null;\n    }\n}\n\nexport default user;","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nexport default function() {\n    const middlewares = [thunk];\n\n    return createStore(reducer, applyMiddleware(...middlewares));\n}","import React from 'react';\nimport Layout from './Layout';\nimport Login from './pages/Login';\nimport Tasks from './pages/Tasks';\nimport Projects from './pages/Projects';\n\nimport userHelper from './helper/user';\n\nimport createStore from './createStore';\nimport {Provider} from 'react-redux';\nimport {DragDropContextProvider} from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\n\nfunction App() {\n  const isLogin = userHelper.isLogin();\n\n  return (\n    <Provider store={createStore()}>\n      <Layout>\n        {!isLogin && <Login/>}\n        { isLogin && \n          <DragDropContextProvider backend={HTML5Backend}>\n            <Router>\n              <Switch>\n                <Route path=\"/projects\" exact component={Projects}/>\n                <Route path=\"/projects/:projectId\"  component={Tasks}/>\n                <Redirect to=\"/projects\"/>\n              </Switch>\n            </Router>\n          </DragDropContextProvider>\n        }\n      </Layout>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}